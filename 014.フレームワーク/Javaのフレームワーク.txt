Java　フレームワーク調査

１、Struts
■概要
Apacheソフトウェア財団によって開発されている
Webアプリケーションフレームワークです。

■特徴
MVCモデルを採用したフレームワーク。
独自のカスタムタグの利用や、Actionクラスとstruts-config.xmlでの画面遷移の管理、
バリデータ(入力チェック)機能の提供などがあげられます。

フレームワークとしての歴史が古い分、Strutsを使用したシステムは多く存在しますが、
脆弱性の発見によって別のフレームワークに移行するユーザも増えているです。
Strutsでシステム構築するにあたっては、脆弱性を把握したうえで構築するように
したほうがよいと推奨されています。

現在、Struts2バージョンアップ版もありますが、
Eclipseユーザのほとんどは開発時に使用するのに選択せず、
Strutsの(2013年時点で)世界シェアは1.3％まで落ち込んでいるそうです。

２、JSF(Java Server Faces)
■概要
JSEは2004年に開発されたJavaベースのWebアプリケーションフレームワークで、
JavaEEの仕様にも採用されているJavaの標準フレームワークです。


■特徴
Strutsと同様にMVCモデルを採用していますが、StrutsのようにURLによっての
アクション(プログラム)が決まる「アクションベースフレームワーク」ではなく、
表示する画面に対応するサーバサイドのクラス(バッキングBean)によって処理が行われる
「コンポーネントベースフレームワーク」という違いがあります。

また、通常ですとView表示にはJSPで実装されるケースが多いですが、
JSFは「XHTML」というXML形式のHTMLで実装されます。
JSPはサーブレットの処理なしでは正しく表示されませんが、
XHTMLの場合はブラウザでそのまま表示されるので、
デザインの確認がしやすいフレームワークという特徴を持っています。

なので、メリットとして大きく挙げられるのが開発チームとデザインチームでの分業は
簡易になるという点があります。

３、Java EE（Java Platform, Enterprise Edition）
■概要
JavaEEは1999年に登場した大規模システム向けのフレームワークです。
初期のバージョンではJ2EE(Java 2 Platform,Enterprise Edition)と呼ばれていましたが、
バージョン5からはこの名称に変更となりました。

■特徴
Java標準仕様のフレームワークで、ServletやJSP、EJBやJavaの各種ARIなど、
企業システムの構築に必要な機能がまとめて提供されています。
標準仕様と言うと使いにくく難しいイメージを持つかもしれませんが
近年では使いやすさや生産性の向上がみられています。

特に最新版のJavaEEは使い勝手がよく、人気も上がってきています。

スタンダードなJavaによる安定感のあるWebアプリケーション開発を行いたい際は、
JavaEEでの開発がおすすめです。

ただ、アップデート頻度が1,2年に1度と、ほかのフレームワークと比較しますと
さらにん新頻度は遅めです。
そのため、最新技術の追従は遅れますが、安定感を重視するのでしたら最良の選択になります。

